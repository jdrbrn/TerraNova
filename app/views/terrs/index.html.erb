<script>

// Function to sort a given table via a given collumn via a 0-indexed number and
// the type of content contained in the column (String, Date, Num)
// returns the sorted data
function sortTable(tablename, colnum, coltype) {
  function sortDate(a, b){
    aDate = new Date(a[colnum])
    bDate = new Date(b[colnum])
    if (aDate == bDate){
      return 0;
    } else if(aDate == "Invalid Date") {
      return 1
    } else if(bDate == "Invalid Date") {
      return -1
    }else if(aDate>bDate){
      return -1;
    } else{
      return 1;
    }
  }

  function sortNum(a, b){
    aNum = a[colnum]
    bNum = b[colnum]
    if (aNum == bNum){
      return 0;
    } else if(aNum>bNum){
      return 1;
    } else{
      return -1;
    }
  }

  function sortString(a, b){
    foo=[a[colnum],b[colnum]]
    foo=foo.sort()
    if (a[colnum]==b[colnum]){
      return 0;
    } else if(foo[0] == a[colnum]){
      return -1;
    } else{
      return 1;
    }
  }

  table=document.getElementById(tablename).tBodies[0].rows
  rawdata=[]
  rawcoldata=[]
  i=0
  while (i<table.length) {
    row=table[i].cells
    temp=[]
    n=0
    while (n<row.length){
        temp.push(row[n].innerHTML)
        n++
    }
    i+=1
    rawdata.push(temp)
    rawcoldata.push(temp[colnum])
  }

  if (coltype=="Date"){
    rawdata.sort(sortDate)
  } else if (coltype=="Num") {
    rawdata.sort(sortNum)

  } else {
    rawdata.sort(sortString)
  }
  return rawdata
}

// Variable to keep track of what is sorted and by how
// Negative values means the data was reversed after sorting
// Thus the value is +/-(colnum+1) as 0==-0 (Even though -0 exists in JS)
sortedTables={}
sortedTables["dnctable"]=1

// Wrapper to write the table out and reverse the data if already sorted via that
// column
function tableSortWrapper(tablename, colnum, coltype){
  data = sortTable(tablename, colnum, coltype)
  if (colnum==sortedTables[tablename]-1){
    data.reverse()
    sortedTables[tablename]=(0-(colnum+1))
  } else {
    sortedTables[tablename]=colnum+1
  }
  table=document.getElementById(tablename).tBodies[0].rows
  i=0
  while (i<table.length) {
    row=table[i].cells
    n=0
    while (n<row.length){
        row[n].innerHTML=data[i][n]
        n++
    }
    i+=1
  }
}

</script>

<p id="notice"><%= notice %></p>

<h1>Territories</h1>

<table id="terrtable">
  <thead>
    <tr>
      <th onclick=tableSortWrapper("terrtable",0,"String")>Name</th>
      <th onclick=tableSortWrapper("terrtable",1,"String")>Region</th>
      <th onclick=tableSortWrapper("terrtable",2,"Date")>Datecomp</th>
      <th onclick=tableSortWrapper("terrtable",3,"String")>Notes</th>
      <th onclick=tableSortWrapper("terrtable",4,"String")>History</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @terrs.each do |terr| %>
      <tr>
        <td><%= terr.name %></td>
        <td><%= terr.region %></td>
        <td><%= terr.datecomp.strftime("%m/%d/%y") %></td>
        <td><%= terr.notes %></td>
        <td><%= terr.history %></td>
        <td><%= link_to 'Show', terr %></td>
        <td><%= link_to 'Edit', edit_terr_path(terr) %></td>
        <td><%= link_to 'Destroy', terr, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Territory', new_terr_path %>
