<!-- Backend Interface Functions -->
<script>
    function signalRestart() {
        if (window.confirm("Continue: Restart TerraNova?")){
            <% if Rails.env.development? %>
                alert("Dev Environment: Manually Restart");
            <% else %>
                var xhttp = new XMLHttpRequest();
                xhttp.open("GET", "admin?restart=1", true);
                xhttp.send();
            <% end %>
        }
    }

    function configReset() {
        if (window.confirm("Reset Configuration to Default?")){
            var xhttp = new XMLHttpRequest();
            xhttp.open("GET", "admin?configReset=1", true);
            xhttp.send();
        }
    }

    // helper function for saveConfig()
    // key is the keys read from form ids
    // value is the value to store at the final key
    // returns store with the value inserted
    function setValue(store, keys, value){
        if (keys.length>1){
            if (!store[keys[0]]) {
                store[keys[0]]={}
            }
            store[keys[0]]=setValue(store[keys[0]],keys.slice(1), value)
            return store
        } else {
            store[keys[0]]=value
            return store
        }
    }

    // Config info is too large to pass via params so hijack config uploading to send new config
    function saveConfig() {
        // setup empty js obj to create JSON from
        var usrconf = {}
        // get all elements within the config section of the page and iterate through
        items = document.getElementById("configlayout").getElementsByTagName('*')
        for (i=0; i<items.length; i++){
            item = items[i]
            // check if the item has an id; only form entries have one
            if (item.id != ""){
                // get the JSON keys from the id
                keys=item.id.split("_")
                // sets the value, with the function handling any nested objects
                // if it's a text area it contains raw json which needs to be converted to an object
                if (item.type == "textarea"){
                    try {
                    usrconf=setValue(usrconf, keys, JSON.parse(item.value))
                    }
                    catch (err){
                        alert("Error parsing "+item.id+" JSON \n("+err+")")
                    }
                }
                else if (item.type == "checkbox"){
                    usrconf=setValue(usrconf, keys, item.checked)
                }
                else {
                    usrconf=setValue(usrconf, keys, item.value)
                }
            }
        }
        var formData = new FormData();
        var blob = new Blob([JSON.stringify(usrconf)])
        formData.append('configUp', blob, 'config.json')

        var request = new XMLHttpRequest();
        var token = document.getElementsByName("authenticity_token")[0].value
        request.open('POST', "admin", true)
        request.setRequestHeader('X-CSRF-Token', token)
        request.send(formData)
    }
</script>

<%#Gets latest version number from github %>
<% require 'net/http' %>
<% response = Net::HTTP.get(URI("https://api.github.com/repos/jdrbrn/TerraNova/releases/latest")) %>
<% response=JSON.parse(response) %>
<%# if request fails it sets latest version to 0 %>
<% if (latestVersion=response["tag_name"]) %>
<% else %>
    <% latestVersion="0"%>
<% end %>
<%#Checks if that version is newer, if so page includes update related stuff %>
<% if latestVersion>TerraNovaConfig["TerraNovaVersion"] %>
    <script>
        function signalUpdate() {
            if (window.confirm("Continue: Update on Restart? This may cause merge issues to manually fix")){
                <% if Rails.env.development? %>
                    alert("Dev Environment: Will Not Update; Use Git");
                <% else %>
                    var xhttp = new XMLHttpRequest();
                    xhttp.open("GET", "admin?update=1", true);
                    xhttp.send();
                <% end %>
            }
        }
    </script>
    <h2 style="color:red">
        Update Available (<a href="<%= response["html_url"] %>" target="_blank"><%= latestVersion %></a>)
        <button type="button" onclick="signalUpdate()"><b>Update TerraNova on Restart</button> 
    </h2>
<% end %>
<h2>Admin Page</h2>
<b>All Changes Apply on Restart</b>
<h3>Configuration <button type="button" onclick="location.href='admin?configDown=1'">Download Configuration File</button></h3>
<%= form_tag "/admin", multipart: true do %>
    <b>Upload Configuration: </b>
    <%= file_field_tag "configUp", accept: ".json" %>
    <%= submit_tag "Upload Configuration File", data: {confirm: "Overwrite current configuration with uploaded?"} %>
<% end %>
<br>
<div id="configlayout" style="display: grid; grid-template-columns: 500px">
    <div style="grid-column: 1">
    <b>General Configuration</b>
    <table>
        <tr>
            <td>Version</td>
            <td>
                <%= TerraNovaConfig["TerraNovaVersion"] %>
                <input id="TerraNovaVersion" type="hidden" value="<%= TerraNovaConfig["TerraNovaVersion"] %>">
            </td>
        </tr>
        <tr>
            <td>Timezone</td>
            <td>
                <select id="timezone">
                    <%= time_zone_options_for_select (selected=TerraNovaConfig["timezone"]) %>
                </select>
            </td>
        </tr>
        <tr>
            <td>Congregation Name</td>
            <td><input id="name" type="text" value="<%= TerraNovaConfig["name"] %>"></td>
        </tr>
        </table>
        <br>
        <b>Multiserver</b>
        <table>
        <tr>
            <td>Enabled</td>
            <td><input id="enableMultiserver" type="checkbox" value="true"
                <%= ("checked" if TerraNovaConfig["enableMultiserver"]=="true") %>>
            </td>
        </tr>
        <tr>
            <td>Server List</td>
            <td>
                <textarea id="multiserverList" cols="40" rows="15" style="resize: none" spellcheck="false"><%= JSON.pretty_generate(TerraNovaConfig["multiserverList"]) %></textarea>
            </td>
        </tr>
        </table>
        <br>
        <b>Authentication</b>
        <table>
        <tr>
            <td>Enable User Account</td>
            <td><input id="enableHTTPAuth" type="checkbox" value="true"
                <%= ("checked" if TerraNovaConfig["enableHTTPAuth"]=="true") %>>
            </td>
        </tr>
        <tr>
            <td>User Account</td>
            <td>username</td>
            <td><input id="HTTPAuth_username" type="text" value="<%= TerraNovaConfig["HTTPAuth"]["username"] %>">
        </tr>
        <tr>
            <td></td>
            <td>password</td>
            <td><input id="HTTPAuth_password" type="text" value="<%= TerraNovaConfig["HTTPAuth"]["password"] %>">
        </tr>
        <tr>
            <td>Enable Admin Account</td>
            <td><input id="enableAdminHTTPAuth" type="checkbox" value="true"
                <%= ("checked" if TerraNovaConfig["enableAdminHTTPAuth"]=="true") %>>
            </td>
        </tr>
        <tr>
            <td>Admin Acount</td>
            <td>username</td>
            <td><input id="adminHTTPAuth_username" type="text" value="<%= TerraNovaConfig["adminHTTPAuth"]["username"] %>">
        </tr>
        <tr>
            <td></td>
            <td>password</td>
            <td><input id="adminHTTPAuth_password" type="text" value="<%= TerraNovaConfig["adminHTTPAuth"]["password"] %>">
        </tr>
        </table>
        <br>
        <b>Formatting</b>
        <table>
        <tr>
            <td>systemCSS</td>
            <td>bodyBG</td>
            <td><input id="systemCSS_bodybg" type="color" value="<%= TerraNovaConfig["systemCSS"]["bodyBG"] %>">
        </tr>
        <tr>
            <td></td>
            <td>terrWarn</td>
            <td><input id="systemCSS_terrWarn" type="color" value="<%= TerraNovaConfig["systemCSS"]["terrWarn"] %>">
        </tr>
        <tr>
            <td></td>
            <td>terrLate</td>
            <td><input id="systemCSS_terrLate" type="color" value="<%= TerraNovaConfig["systemCSS"]["terrLate"] %>">
        </tr>
        <tr>
            <td></td>
            <td>toolbarBG</td>
            <td><input id="systemCSS_toolbarBG" type="color" value="<%= TerraNovaConfig["systemCSS"]["toolbarBG"] %>">
        </tr>
        <tr>
            <td></td>
            <td>thBG</td>
            <td><input id="systemCSS_thBG" type="color" value="<%= TerraNovaConfig["systemCSS"]["thBG"] %>">
        </tr>
        <tr>
            <td></td>
            <td>tdBG</td>
            <td><input id="systemCSS_tdBG" type="color" value="<%= TerraNovaConfig["systemCSS"]["tdBG"] %>">
        </tr>
        <tr>
            <td>dncCSS</td>
            <td>dncCardWidth</td>
            <td><input id="dncCSS_dncCardWidth" value="<%= TerraNovaConfig["dncCSS"]["dncCardWidth"] %>">
        </tr>
        <tr>
            <td></td>
            <td>specialDNC</td>
            <td><input id="dncCSS_specialDNC" type="color" value="<%= TerraNovaConfig["dncCSS"]["specialDNC"] %>">
        </tr>
    </table>
    <br>
    </div>
    <div style="grid-column: 2">
        <b>Table Options</b>
        <table>
            <tr>
                <td>Main Table Layout</td>
                <td><input id="reportIndexLayout" type="text" value="<%= TerraNovaConfig["reportIndexLayout"] %>">
            </tr>
            <tr>
                <td>Worksheet Table Layout</td>
                <td><input id="reportPrintLayout" type="text" value="<%= TerraNovaConfig["reportPrintLayout"] %>">
            </tr>
        </table>
    </div>
</div>
<br>
<button type="button" onclick="configReset()">Reset to Default</button>
<button type="button" onclick="saveConfig()">Save Configuration</button>


<br>
<h3>Database <button type="button" onclick="location.href='admin?dbDown=1'">Download Database</button></h3>
<%= form_tag "/admin", multipart: true do %>
    <b>Upload Database</b> <%= file_field_tag "dbUp", accept: ".sqlite3" %>
    <%= submit_tag "Upload Database", data: {confirm: "Overwrite database with uploaded?"} %>
<% end %>
<br>
<h3>System</h3>
<button type="button" onclick="signalRestart()"><b>Restart TerraNova</button>